250502 교육일지

내가 직접 프로그램 설계하기

package com.ohgiraffers.section03.makingramen;

import java.util.Scanner;

public class Application {

    public static void main(String[] args) {

        /*프로그램 개요
        * 요리사가 라면을 끓이는 게임 프로그램
        *
        * 시스템 요구사항
        * 1. 요리사는 인덕션 전원 켜기, 물끓이기, 스프넣기, 면넣기, 인덕션 끄기를 할 수 있다.
        * 2. 라면은 고요하기, 끓기 시작, 완전 끓기, 끓는 것을 멈출 수 있다.
        * 3. 라면(을 끓이는 냄비는) 처음 고요한 상태로 있는다.
        * 4. 요리사가 먼저 인덕션 전원을 켠다. 이미 전원이 켜져있으면 다시 켤 수 없다.
        * 5. 요리사가 물을 끓이면 라면은 10도씨 씩 온도가 올라가며 끓기 시작한다.
        * 6. 스프를 넣으면 라면은 20도씨 올라간다.
        * 7. 면을 넣으면 라면은 5도씨 내려간다.
        * 8. 인덕션을 끄면 라면은 더 이상 끓지 않고 멈춘다.
        * 9. 라면을 끓이는 중에 인덕션을 끌 수 없다.
        *  */

        /* 프로그램 설계
        * 1. 필요한 객체
        * -사용자(플레이어), 요리사, 라면(냄비)
        *
        * 2. 객체간 상호작용
        * -요리사가 수신할 수 있는 메시지
        * 1)인덕션 전원 on
        * 2)스프 넣어라
        * 3)면 넣어라
        * 4)인덕션 전원 off
        *
        * -라면이 수신할 수 있는 메시지
        * 1)고요한 상태
        * 2)끓기 시작
        * 3)완전 끓기
        * 4)끓는 것 멈추기*/

        Cook cook = new Cook();

        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("맛있는 라면을 끓여보아요");
            System.out.println("1.인덕션 전원 켜기");
            System.out.println("2.잔잔한 수면");
            System.out.println("3.물 조용히 끓기");
            System.out.println("4.물 더 끓기");
            System.out.println("5.물 팔팔 끓기");
            System.out.println("6.인덕션 전원 끄기");
            System.out.println("8.끓는 것 멈추기");
            System.out.println("순서대로 번호를 입력해야해요");
            System.out.print("번호 입력 : ");
            int num = sc.nextInt();

        switch (num) {
            case 1 : cook.turnOn(); break;
            case 2 : cook.start(); break;
            case 3 : cook.put1(); break;
            case 4 : cook.put2(); break;
            case 5 : cook.turnOff(); break;
            case 7 :
                System.out.println("라면 완성"); break;
            default:
                System.out.println("잘못된 번호 선택"); break;
        }
        if(num == 8){
            break;
        }
        }
    }
}

<Ramen>

package com.ohgiraffers.section03.makingramen;

public class Ramen {

    private boolean isOn; //초기에는 전원 안켜진 false상태
    private int temper;

    public void turnOn() {
        if (isOn) {
            System.out.println("이미 전원이 켜져있음");
        } else {
            this.isOn = true;
            System.out.println("전원을 켰음 물 끓일 준비 완료");
        }
    }

    public void start() {
        if (isOn) {
            System.out.println("물이 끓기 시작");
            this.temper += 10;
            System.out.println("현재 물의 온도 : " + this.temper);
        } else {
            System.out.println("현재 물이 끓고 있지 않음 전원을 먼저 켜라");
        }
    }

    public void put1() {
        if (isOn) {
            if (this.temper >= 40) {
                System.out.println("스프 넣어");
                this.temper += 20;
            } else {
                System.out.println("불 세기를 올려");
            }
        }
    }
    public void put2() {
        if (isOn) {
            if(this.temper >= 80) {
                System.out.println("면 넣어");
                this.temper +=20;
            } else {
                System.out.println("불 세기를 더더 올려");
            }
        }
    }
    public void turnOff() {
        if(isOn) {
            if(this.temper > 100){
                System.out.println("이제 불을 꺼");
            } else {
                this.isOn = false;
                System.out.println("인덕션 전원 다시 켜");
            }
        } else {
            System.out.println("불 이미 꺼졌어 확인해");
        }
    }
}

<cook>

package com.ohgiraffers.section03.makingramen;

public class Cook {

    private final Ramen ramen = new Ramen();

    public void turnOn() {

        ramen.turnOn();
    }
    public void start() {

        ramen.start();
    }
    public void put1() {

        ramen.put1();
    }

    public void put2() {
        ramen.put2();
    }
    public void turnOff() {
        ramen.turnOff();
    }
}
