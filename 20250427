250427 오늘 공부한 것

알고리즘 강의

시간복잡도

int func1(int arr[], int n ){
int cnt = 0; //cnt 변수 선언, 0을 넣는 과정
for (int i = 0; i<n, i++){ // 초기값 0 대입, n번에 걸쳐 반복 I가 n보다 작은지 확인, 작을 경우 1증가 시킴
  if (arr[i] % 5 == 0) cnt++; //5로 나눈 나머지 계산, 0과 일치하는지, 5의 배수라면 cnt 1 증가
}
  return cnt; //마지막으로 cnt반환할때
  } 
  n개의 수를 훑어보면 5로 나눈 나머지를 계산해보게 됨


  내 풀이가 이 문제를 제한시간 내로 통과할 수 있는지
  즉, 내 알고리즘의 시간 복잡도가 올바른지 생각

  예) N이 500 0(2의n승)풀이, 시간제한 내로 풀 수 없음(허용시간복잡도)
  시간 복잡도 개념을 생각하지 않고 무턱대고 구현하면 안됨

  내 풀이의 시간 복잡도를 어떻게 알지?가 어려움

  N이하의 자연수 중 3의 배수 또는 5의 배수인 수 를 모두 합한 갑을 반환하는 함수
  func1(int N)
    int func1(int N) {
      int ret = 0;
      for(int i = 1; i<=N; i++){
        if (i%3==0 || i%5==0) ret += i;
        }
        return ret;
        }

공간복잡도 메모리 제한이 512mb일 때 int변수를 대략 1.2억개 정도 선언할 수 있다
int 1개 4byte

character자료형에서 제일 왼쪽은 -2의 7제곱
char자료형은 1byte = 8bit

00001001 => -2(7) ... 2(0)
2의 complenet개념 보면 알 수 있음

short 2byte 2(15)-1 = 32767
int 4byte 2(31)-1 = 약 21억
long 8byte 2(63)-1 = 약 9.2*10(18)

int잘형이 표현할 수 있는 범위를 넘어서는 수를 저장할 땐 long에
오버플로우 발생하면 강제형변환~


실수 자료형은 double을 사용하는게 굿.
