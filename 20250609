250609 교육일지

handler mapping 과 request mapping

HANDLER MAPPING, REQUEST MAPPING 모두 웹 애플리케이션에서 요청을 처리하는데 사용되는 개념이다.
이 두 개념은 Spring MVC에서 주로 사용되는 개념으로, 
웹 애플리케이션에서 클라이언트의 요청을 처리하는데 중요한 역할을 한다.

//Handler Mapping?
- 웹 애플리케이션은 다양한 요청을 받게 되는데, 
  Handler Mapping은 이러한 요청에 대해 어떤 핸들러(컨트롤러)가 처리해야하는지를 결정한다.
- Spring 프레임워크에서는 'HandlerMapping' 인터페이스를 제공하여 핸들러 매핑을 구현할 수 있다. 
- DispatcherServlet은 등록된 Handler Mapping을 참조하여 요청을 적절한 컨트롤러로 전달한다.

//Request Mapping?
- Request Mapping은 요청 URL과 해당 URL을 처리하는 핸들러(컨트롤러)를 매핑하는 역할을 한다.
- Request Mapping은 주로 컨트롤러의 메서드에 적용되며, 어떤  URL 패턴에 해당하는 요청이 특정 메서드로 매핑되도록 설정한다.
- Spring 프레임워크에서는 @RequestMapping 어노테이션을 사용하여 요청 URL과 핸들러 메서드를 매핑할 수 있다. 
  이 어노테이션을 컨트롤러 클래스 레벨에 적용하면 해당 컨트롤러의 모든 메서드에 적용되며, 
  메서드 레벨에 적용하면 해당 메서드만 특정 URL에 매핑된다. 

** 즉, Handler Mapping은 요청을 처리할 핸들러를 결정하고, 
   Request Mapping은 요청 URL과 핸들러(컨트롤러)를 매핑하여 적절한 핸들러에게 요청을 전달하는 역할을 한다.

 ## GET 방식 : 어떠한 정보를 가져와서 조회하기 위해 사용되는 방식

▪ URL에 변수를 포함시켜 요청한다.
▪ 데이터를 header를 포함하여 전송한다.
▪ URL에 데이터가 노출되어 보안에 취약하다.
▪ 캐싱이 가능하다. (캐싱: 한번 접근후, 똑같은 요청을 할 시 빠르게 접근하기 위해 레지스터에 데이터를 저장시키는것)

##POST 방식: 데이터를 서버로 제출하여 추가 또는 수정하기 위해서 데이터를 전송하는 방식

▪ URL에 변수에 변수를 노출하지 않고 요청을 한다.
▪ 데이터를 Body에 포함시킨다.
▪ URL에 데이터가 노출되지 않아서 기본 보안이 설정되어 있다.
▪ 전송하는데 길이 제한이 없고 캐싱이 불가능하다.

Spring을 공부하였을때 Get방식 즉, @GetMapping을 사용하여 loginRequest, joinRequest를 사용하였더니 
URL에 아이디, 비밀번호 혹은 아이디, 비밀번호, 이름이 노출되는것을 확인하였다. 
이것에 대한 해결방안으로 Get방식 (@GetMapping)이 아닌 Post(@PostMapping)방법을 사용하였다.
