250519 교육일지

SQL 실습문제 WHERE, JOIN사용한 14문제와 JOIN 사용한 7문제를 풀어보았다.

-- 모든 행 모든 컬럼 조회
-- 1. EMPLOYEE테이블에서 모든 정보를 조회하세요
SELECT
*
from employee;

-- 원하는 컬럼 조회
-- 2. EMPLOYEE 테이블의 사번, 이름을 조회하세요
select
	EMP_ID,
    emp_name
from employee;

-- 원하는 행 조회
-- 3. EMPLOYEE 테이블에서 부서코드가 D9인 사원을 조회하세요
select
	*
from employee
where DEPT_CODE = 'D9';

-- 원하는 행과 컬럼 조회
-- 4. EMPLOYEE 테이블에서 급여가 300만원 이상인 직원의 사번, 이름, 부서코드, 급여를 조회하세요
SELECT
	EMP_ID,
    EMP_NAME,
    DEPT_CODE,
    SALARY
FROM employee
WHERE SALARY >= 3000000;

-- 5. 부서코드가 D6이고 급여를 200만원보다 많이 받는 직원의 이름, 부서코드, 급여를 조회하세요.
SELECT EMP_NAME,
	   DEPT_CODE,
       SALARY
FROM employee
WHERE DEPT_CODE = 'D6'
AND SALARY > 2000000;

-- NULL값 조회
-- 6. 보너스를 지급받지 않는 직원의 사번, 이름, 급여, 보너스를 조회하세요
SELECT
	EMP_ID,
    EMP_NAME,
    SALARY,
    BONUS
FROM EMPLOYEE
WHERE BONUS IS NULL;

-- 7. EMPLOYEE테이블에서 급여를 350만원 이상, 550만원 이하를 받는 직원의 사번, 이름, 급여, 부서코드, 
-- 직급코드를 조회하세요
SELECT EMP_ID,
	   EMP_NAME,
       SALARY,
       DEPT_CODE,
       JOB_CODE
	FROM employee
    WHERE SALARY BETWEEN 3500000 AND 5500000;
    
-- 8. EMPLOYEE테이블에서 성이 김씨인 직원의 사번, 이름, 입사일을 조회하세요
select EMP_ID,
	   EMP_NAME,
       HIRE_DATE
FROM employee
WHERE EMP_NAME LIKE '김%';

-- 9. EMPLOYEE 테이블에서 '하'가 이름에 포함된 직원의 이름, 주민번호, 부서코드를 조회하세요
SELECT 
	EMP_NAME,
    EMP_NO,
    DEPT_CODE
FROM EMPLOYEE
WHERE EMP_NAME LIKE '%하%';

-- 10. EMPLOYEE테이블에서 전화번호 국번이 9로 시작하는 직원의 사번, 이름, 전화번호를 조회하세요
-- HINT!! 와일드 카드 사용 : _(글자 한자리), %(0개 이상의 글자)
SELECT 
	EMP_ID,
    EMP_NAME,
    PHONE
FROM employee
WHERE PHONE LIKE '___9%';

-- 11. EMPLOYEE테이블에서 전화번호 국번이 4자리 이면서 9로 시작하는 직원의 사번, 이름, 전화번호를 조회하세요
SELECT 
EMP_ID,
EMP_NAME,
PHONE
FROM EMPLOYEE
WHERE PHONE LIKE '___9_______';


-- 12. 부서코드가 'D6' 이거나 'D8'인 직원의 이름, 부서, 급여를 조회하세요
-- HINT!! IN 연산자 : 비교하려는 값 목록에 일치하는 값이 있는지 확인 JOIN
SELECT
A.EMP_NAME,
A.SALARY,
A.DEPT_CODE,
B.DEPT_TITLE
FROM EMPLOYEE A
INNER JOIN DEPARTMENT B ON A.DEPT_CODE = B.DEPT_ID
WHERE A.DEPT_CODE IN ('D6','D8');


-- 13. 이씨성이 아닌 직원의 사번, 이름, 이메일주소를 조회하세요
SELECT
EMP_ID,
EMP_NAME,
EMAIL
FROM employee
WHERE EMP_NAME NOT like ('이%');

-- 14. J2직급의 급여 200만원 이상 받는 직원이거나 J7 직급인 직원의 이름, 급여, 직급코드를 조회하세요
SELECT 
	EMP_NAME,
    SALARY,
    JOB_CODE
FROM EMPLOYEE
WHERE (JOB_CODE = 'J2'
AND SALARY >= 2000000)
OR JOB_CODE = 'J7';

###########7문제

-- JOIN을 이용하여 여러 테이블을 조회 시에는 모든 컬럼에 테이블 별칭을 사용하는 것이 좋다.

-- 1. 직급이 대리이면서 아시아 지역에 근무하는 직원의 사번, 이름, 직급명, 부서명, 지역명, 급여를 조회하세요.
SELECT
E.EMP_ID,
E.EMP_NAME,
J.JOB_NAME,
D.DEPT_TITLE,
L.LOCAL_NAME,
E.SALARY
FROM EMPLOYEE E
LEFT JOIN DEPARTMENT D ON E.DEPT_CODE = D.DEPT_ID
LEFT JOIN LOCATION L ON D.LOCATION_ID = L.LOCAL_CODE
LEFT JOIN JOB J ON J.JOB_CODE = E.JOB_CODE
WHERE J.JOB_NAME = '대리'
AND LOCAL_NAME LIKE 'ASIA%';

	

-- 2. 주민번호가 70년대 생이면서 성별이 여자이고, 성이 전씨인 직원의 이름, 주민등록번호, 부서명, 직급명을 조회하세요.
SELECT
	E.EMP_NAME,
    E.EMP_NO,
    D.DEPT_TITLE,
    J.JOB_NAME
FROM EMPLOYEE E
LEFT JOIN DEPARTMENT D ON E.DEPT_CODE = D.DEPT_ID
LEFT JOIN JOB J ON E.JOB_CODE = J.JOB_CODE
WHERE EMP_NO LIKE '7_______2%';

-- 3. 이름에 '형'자가 들어가는 직원의 사번, 이름, 직급명을 조회하세요.
SELECT
	E.EMP_ID,
    E.EMP_NAME,
    J.JOB_NAME
FROM employee E
INNER JOIN JOB J ON J.JOB_CODE = E.JOB_CODE
WHERE E.EMP_NAME LIKE '%형%';

-- 4. 해외영업팀에 근무하는 직원의 이름, 직급명, 부서코드, 부서명을 조회하세요.
SELECT
	E.EMP_NAME,
    J.JOB_NAME,
    E.DEPT_CODE,
    D.DEPT_TITLE
FROM employee E
LEFT JOIN JOB J ON J.JOB_CODE = E.JOB_CODE
LEFT JOIN DEPARTMENT D ON D.DEPT_ID = E.DEPT_CODE
WHERE D.DEPT_TITLE LIKE '해외영업%';

-- 5. 보너스포인트를 받는 직원의 이름, 보너스, 부서명, 지역명을 조회하세요.
SELECT
	E.EMP_NAME,
    E.BONUS,
    D.DEPT_TITLE,
    L.LOCAL_NAME
FROM employee E
LEFT JOIN DEPARTMENT D ON D.DEPT_ID = E.DEPT_CODE
LEFT JOIN LOCATION L ON L.LOCAL_CODE = D.LOCATION_ID
WHERE BONUS;

-- 6. 부서코드가 D2인 직원의 이름, 직급명, 부서명, 지역명을 조회하세오.
SELECT
	E.EMP_NAME,
    J.JOB_NAME,
    D.DEPT_TITLE,
    D.DEPT_ID, -- 조회하라고 안했는데 알아보기 쉽게 썼습니다.
    L.LOCAL_NAME
FROM employee E
LEFT JOIN DEPARTMENT D ON D.DEPT_ID = E.DEPT_CODE
LEFT JOIN JOB J ON J.JOB_CODE = E.JOB_CODE
LEFT JOIN LOCATION L ON L.LOCAL_CODE = D.LOCATION_ID
WHERE D.DEPT_ID = 'D2';

-- 7. 한국(KO)과 일본(JP)에 근무하는 직원의 이름, 부서명, 지역명, 국가명을 조회하세요.
SELECT
	E.EMP_NAME,
    D.DEPT_TITLE,
    L.LOCAL_NAME,
    N.NATIONAL_CODE,
    N.NATIONAL_NAME
FROM employee E
LEFT JOIN DEPARTMENT D ON D.DEPT_ID = E.DEPT_CODE
LEFT JOIN LOCATION L ON L.LOCAL_CODE = D.LOCATION_ID
LEFT JOIN NATION N ON N.NATIONAL_CODE = L.NATIONAL_CODE
WHERE N.NATIONAL_CODE = 'KO'
OR N.NATIONAL_CODE = 'JP';
    
