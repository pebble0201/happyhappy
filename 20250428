250428 교육일지

실습 문제

package com.ohgiraffers;

public class q1 {
    public static void main(String[] args) {

//        1.
//
//        정수형 변수 2개를 선언하여,
//        각 20과 30으로 초기화 한 후,
//        두 수의 더하기, 빼기, 곱하기, 나누기, 나머지를 다음과 같이 출력하세요.
//
//                -- 출력 예시 --
//                더하기 결과  : 50
//        빼기 결과 : -10
//        곱하기 결과 : 600
//        나누기한 몫 : 0
//        나누기한 나머지 : 20

        int num1 = 20;
        int num2 = 30;

        System.out.println("더하기 결과 : " + (num1+num2));
        System.out.println("빼기 결과 : " + (num1-num2));
        System.out.println("곱하기 결과 : " + (num1*num2));
        System.out.println("나누기 한 몫 : " + (num1/num2));
        System.out.println("나누기 한 나머지 : " + (num1%num2));
    }
}


package com.ohgiraffers;

public class q2 {

    public static void main(String[] args) {
//
//        사각형의 넓이와 둘레를 구하여 출력합니다.
//                너비 12.5 높이 36.4를 변수에 저장하고,
//                넓이와 둘레를 계산한 뒤 각각 넓이와 둘레를 변수에 담아 아래와 같이 출력하세요.
//
//                -- 출력 예시 --
//                면적 : 455.0
//        둘레 : 97.8

        double width = 12.5;
        double height = 36.4;

        System.out.println("면적 : " + width*height);
        System.out.println("둘레 : " + (width*2 + height*2));
    }
}


package com.ohgiraffers;

public class q3 {
    public static void main(String[] args) {

//        국어점수 80.5점, 수학점수 50.6점, 영어점수 70.8점을 실수 형태로 저장한 뒤,
//                총점과 평균을 정수 형태로 출력하세요.
//
//        -- 출력 예시 --
//        총점 : 201
//        평균 : 67

        double score1 = 80.5;
        double score2 = 50.6;
        double score3 = 70.8;

        double scores = score1+score2+score3;
        int result = (int) scores;
        //강제형변환 ..
        System.out.println("총점 : " + result);
        System.out.println("평균 : " + result/3);
    }
}



package com.ohgiraffers;

public class q4 {
    public static void main(String[] args) {

//        두 개의 정수형 변수를 선언하고, 삼항 연산자를 사용하여
//        두 수 중 큰 수를 출력하는 프로그램을 작성하세요.
//
//        -- 출력예시 --
//        두 수 중 큰 수는 20입니다.

        int num1 = 10;
        int num2 = 20;

        int result1 = (num1 > num2)? num1 : num2;

        System.out.println("두 수 중 큰 수는 " + result1 + " 입니다.");


    }
}



package com.ohgiraffers;

public class q5 {
    public static void main(String[] args) {
        //        정수형 변수를 선언하여 점수를 저장하고,
//                삼항 연산자를 사용하여 점수가 60점 이상이면 “합격입니다”,
//        그렇지 않으면 “아쉽지만 불합격입니다.” 을 출력하는 프로그램을 작성하세요.
//
//        -- 출력예시 --
//        합격입니다~~!!!
//
//                또는 아쉽지만 불합격입니다…

        int num1 = 50;
        int num2 = 60;
        int num3 = 70;

        String result1 = (num1>=60)? "합격입니다" : "불합격입니다.";
        String result2 = (num2>=60)? "합격입니다" : (num2>=60)? "합격입니다." : "불합격입니다.";
        String result3 = (num3>=60)? "합격입니다" : (num3>=60)? "합격입니다." : "불합격입니다.";

        System.out.println(result1);
        System.out.println(result2);
        System.out.println(result3);
    }
    }




package com.ohgiraffers;

public class q6 {

    public static void main(String[] args) {

//        정수형 변수를 선언하고, 삼항연산자를 사용하여
//        입력된 수가 짝수인지 홀수인지 출력하는 프로그램을 작성하세요.
//                /* 참고사항 : 조건식에 %를 활용하여 짝수인지 홀수인지를 판단해보세요 */
//
//                -- 출력예시 --
//        입력하신 수는 짝수입니다.
//
//                또는 입력하신 수는 홀수입니다.

        int num1 = 3;
        int num2 = 4;
        int num3 = 5;

        String result1 = (num1 % 2 == 0)? "짝수입니다" : (num1 % 2 == 1)? "홀수입니다." : "아무것도 아닙니다.";
        String result2 = (num2 % 2 == 0)? "짝수입니다" : (num2 % 2 == 1)? "홀수입니다." : "아무것도 아닙니다.";
        String result3 = (num3 % 2 == 0)? "짝수입니다" : (num3 % 2 == 1)? "홀수입니다." : "아무것도 아닙니다.";

        System.out.println(result1);
        System.out.println(result2);
        System.out.println(result3);

    }
}



package com.ohgiraffers;

public class q7 {

    public static void main(String[] args) {

//        정수형 변수를 두개 선언하여 회원의 월(month)과 일(day)를 저장합니다.
//        월이 1월부터 6월까지이면서, 일이 1일부터 15일까지인 경우 “배민 쿠폰”을,
//                월이 7월부터 12월까지이면서, 일이 16일부터 31일까지인 경우 “스타벅스 커피”를
//        그 외의 경우는 “사탕”이 선물로 선택되는 프로그램을 작성하세요.
//
//                -- 출력예시 --
//“본인이름”의 선물은 스타벅스 커피 입니다.
//
//                또는 “본인이름”의 선물은 사탕 입니다.
//
//        또는 “본인이름”의 선물은 배민 쿠폰 입니다.

//        int date = month >= 1 && month <= 6 day >= 1 && day <= 15 "배민쿠폰";
//        int date = month >= 7 && month <= 12 day >= 16 && day <= 31 "스타벅스" ;
//         "사탕"
//        System.out.println("");

    }
}



package com.ohgiraffers;

import java.util.Scanner;

public class q8 {
    public static void main(String[] args) {
//        코알라가 축제 아르바이트를 시작했습니다.
//        맥주를 판매하려면 성인인지 확인을 해야 해요.
//
//        '나이가 어떻게 되세요?'를 출력하고 나이(정수)를 입력받아,
//        성인이면 '판매 가능합니다.'를 출력하고,
//        미성년자이면 '판매 불가능합니다. 음료 코너에서 골라주세요.' 를 출력하세요.
//
//        -- 입력 예시 --
//        성인이십니까? 21
//
//                -- 출력 예시 --
//                판매 가능합니다.

        System.out.println("나이가 어떻게 되세요?");
        Scanner sc = new Scanner(System.in);
        int answer = sc.nextInt();

        if (answer >= 20) {
            System.out.println("판매 가능합니다.");
        }else{
        System.out.println("판매 불가. 음료코너에서 골라");}
    }
}




package com.ohgiraffers;

import java.util.Scanner;

public class q9 {
    public static void main(String[] args) {
//        코알라가 숫자 뽑기를 통해 선물을 나눠주는 이벤트 부스에서 일합니다.
//
//                "당첨 번호가 어떻게 되세요?"를 출력하여,
//        1~10 사이의 정수 한개를 입력받고,
//        홀수인지 짝수인지 확인하고,
//                홀수이면 "홀수네요, 인형 선물입니다!", 홀수가 아니면 "짝수네요, 모자 선물입니다!"라고 출력하세요.
//
//        단, 1~10 사이의 정수가 아닌 경우 "당첨 번호는 1~10 사이에만 있어요."를 출력하세요.
//
//        -- 입력 예시 --
//        당첨 번호가 어떻게 되세요? 8
//
//                -- 출력 예시 --
//                짝수네요, 모자 선물입니다!

        System.out.println("당첨 번호가 어떻게 되시나요?");
        Scanner sc = new Scanner(System.in);
        int random = (int) (Math.random() * 10) + 1;
        int answer = sc.nextInt();

        if (answer != random) {
            System.out.println("당첨번호는 1~10 사이에만 있어요");

                if (answer % 2 != 0) { //if문 안 if문 중괄호 안해야함.
                    System.out.println("홀수네요, 인형선물입니다.");
                } else
                    System.out.println("짝수네요. 모자선물입니다.");
            }

    }
}



package com.ohgiraffers;

import java.util.Scanner;

public class q10 {
    public static void main(String[] args) {

//        판다는 축제 부스에서 일한 뒤, 인사평가 점수를 받았습니다.
//
//        성실, 서비스, 미소 점수를 입력받아
//        평균 점수가 60점 이상이면서 각 항목이 40점 이상인 조건이 만족하면 "합격입니다!" 를 출력하세요,
//
//        단, 합격이 아닌 경우 불합격 사유가 무엇인지를 모두 출력해 주어야 합니다.
//                평균점수 미달인 경우 "평균점수 미달로 불합격입니다."라고 출력하고,
//        항목당 과락 점수가 있는 경우 "xx 항목의 점수 미달로 불합격 입니다."를 출력하세요.
//
//        -- 입력 예시 --
//        성실 점수 : 60
//        서비스 점수 : 30
//        미소 점수 : 20
//
//                -- 출력 예시 --
//                평균 점수 미달로 불합격입니다.
//                서비스 점수 미달로 불합격입니다.
//                미소 점수 미달로 불합격입니다.

        Scanner sc = new Scanner(System.in);

        System.out.println("성실");
        int point = sc.nextInt();

        System.out.println("서비스");
        int point1 = sc.nextInt();

        System.out.println("미소");
        int point2 = sc.nextInt();

        int score = (point + point1 + point2) / 3;

        String grade = "";
        if (score >= 60) {
            if (point >= 40) ;
            {//각 항목이 40점 이상인걸 어떻게 표현하면 좋을까요 ..
                System.out.println("합격입니다.");
            }
        }
    }
}


package com.ohgiraffers.section01.method;

public class Application7 {

    public static void main(String[] args) {

        /* comment. 매개변수와 리턴값을 복합적으로 활용하는 것을 이해하고 활용할 수 있다. */

        int first = 20;
        int second = 10;

        Application7 app7 = new Application7(); // 이 공식을 이용해서
        System.out.println(app7.plusTwoNumbers(first,second));
        System.out.println(app7.minusTwoNumbers(first,second));
        System.out.println(app7.multipleTwoNumbers(first,second));
        System.out.println(app7.divideTwoNumbers(first,second));

    }

    public int plusTwoNumbers(int first, int second){

        return first + second;
    }

    public int minusTwoNumbers(int first, int second) {

        return first - second;
    }

    public int multipleTwoNumbers(int first, int second){

        return first * second;
    }

    public int divideTwoNumbers(int first, int second){

        return first / second;
    }
}





package com.ohgiraffers.section01.method;

public class Application8 {

    public static void main(String[] args) {

        /* comment. static 메소드를 호출할 수 있다. */
        /* static 메소드를 호출하는 방법
        * 클래스명.메소드명();
        * */

        Application8.sumTwoNumbers(19,20); //클래스명.메소드 static method로 만든이유가 명확해야함
//메모리 상 static 메소드 올라가있으면 다른 곳이랑 공유되는데 값의 변경 위험성.......
        //전파.. 위험 ... 안쓰는게 좋아.. 쓸거면 왜 썼는지 명확한 이유가 있어야함
        sumTwoNumbers(20,30); //동일한 클래스 일 때 클래스명 생략 가능
    }

     public static int sumTwoNumbers(int first, int second) {
        //static 키워드를 붙여 만듦 접근제어자와 반환형(int형) 사이에 붙일 수 있

        return first+second;
     }
}





package com.ohgiraffers.section01.method;

public class Application9 {

    public static void main(String[] args) {

        /*comment. 다른 클래스에 작성한 메소드를 호출할 수 있다. */
        int first = 100; //변수 100으로 초기화 해서 선언.
        int second = 50;

        /* 1. non-static 메소드의 경우 */
        //클래스를 객체화해서 그 안에있는 함수를 불러오는 것 = 메소드
        Calculator calc = new Calculator(); //메소드를 호출해오는 공식은 같음
        int min = calc.minNumberOf(first, second);

        System.out.println("두 수의 최솟값은 : " + min);

        /* 2. static 메소드의 경우 */
        /* 다른 클래스에 작성한 static 메소드의 경우 호출할 때 클래스명을
        * 반드시 기술해야 한다. */
//        int max = maxNumberOf(first, second); //이런식으로 쓸 수 없음 import쓸 수 있긴하지만 권장 안함
        int max = Calculator.maxNumberOf(first, second);

        System.out.println("두 수 중 최댓값은 : " + max);

        /* 주의사항
        * static 메소드도 non-static 메소드처럼 호출은 가능하다.
        * 하지만 권장하지 않는다.
        * 이미 메모리에 로딩되어 있는 static 메소드는 여러 객체가 공유하게 된다.
        * 그 때 객체로 접근하게 되면 인스턴스가 가진 값으로 공유된 값에 예상치 못하는 동작을
        * 유발할 수 있기 때문에 사용을 제한해달라는 경고이다.
        * 시스템이 복잡해질수록 객체의 상태를 추적하기 어려워 유지보수에 악영향을 준다.
        * */
        int max2 = calc.maxNumberOf(first, second); //권장하지 않는다.
    }

}





package com.ohgiraffers.section02.package_and_import;

public class Application1 {

    public static void main(String[] args) {

        /* comment. 패키지에 대해 이해할 수 있다. */
        /* 패키지란?
        * 서로 관련 있는 클래스 또는 인터페이스 들을 모아 하나의 묶음(그룹)으로 단위를 구성한는 것을 말한다.
        * 같은 패키지 내에서는 동일 한 이름의 클래스를 만들 수 없지만, 패키지가 다르면 동일한 이름을 가진 클래스를 만들 수 있다.
        * 클래스 명은 원래 패키지명을 포함하고 있기 때문이다. 예)com.ohgiraffers.section01.method.Calculator (이 자체가 클래스 이름)
        * */

        /* 1. non-static 메소드의 경우 다른 클래스에 있는 패키지 어떻게 가져오는지 */
        com.ohgiraffers.section01.method.Calculator calc = new com.ohgiraffers.section01.method.Calculator();
        int min = calc.minNumberOf(30,20);
//이런식으로 기술하면 번거롭
        System.out.println(min);

        /* static 메소드의 경우 */
        int max = com.ohgiraffers.section01.method.Calculator.maxNumberOf(30,20);

        System.out.println(max);

    }
}






ackage com.ohgiraffers.section02.package_and_import;

import com.ohgiraffers.section01.method.Calculator;

import static com.ohgiraffers.section01.method.Calculator.maxNumberOf;

public class Application2 {

    public static void main(String[] args) {

        /* comment. import에 대해 이해할 수 있다. */
        /* 임포트란?
        * 패키지명을 생략하고 사용할 수 있도록 한 구문이 import이다.
        * import는 package 선언문과 class 선언문 사이에 작성하며
        * 어떠한 패키지 내에 있는 클래스를 사용할 것인지에 대해 미리 선언하는 효과를 가진다.
        * */

        /* 1. non-static 메소드의 경우 calculator 다시 호출해보기 */
        Calculator calc = new Calculator();
        int min = calc.minNumberOf(50,60);

        System.out.println(min);

        /* 2. static 메소드인 경우 */
        int max = maxNumberOf(50,60);
        System.out.println(max);

        /* 3.static 메소드를 호출할 때 클래스명도 생략하고 사용(import static) */
        int max2 = maxNumberOf(100,200); //alt + enter

        System.out.println(max2);

        /* 3. 난수 출력 */
        System.out.println(Math.random());
    }
}



package com.ohgiraffers.section03.math;

import java.util.Random;

public class Applicatioin3 {

    public static void main(String[] args) {

        /*comment. java.util.Random 클래스를 활용하여 사용자 지정 범위의 난수를 발생시킬 수 있다. */
        /*java.util.Random 클래스의 nextInt() 메소드를 이용한 난수 발생
        * */

        /* 원하는 범위의 난수를 구하는 공식
        * random.nextInt(구하려는 난수의 갯수) + 구하려는 난수의 최솟값
        * */

        Random random = new Random();

        /* 1. 0~9까지 난수 발생 */
        int random1 = random.nextInt(10);
        System.out.println("random1 = " + random1);

        /* 2. 1~10까지의 난수 발생 */
        int random2 = random.nextInt(10) + 1;
        System.out.println(random2);
        /*3. 20~45까지 난수 발생 */
        int random3 = random.nextInt(26) +20;
        System.out.println(random3);
        /*3. -128~127까지 난수 발생 */
        int random4 = random.nextInt(256) -128;
        System.out.println(random4);
    }
}





package com.ohgiraffers.section03.math;

public class Application1 {

    public static void main(String[] args) {

        /* comment. Math 클래스에서 제공하는 static 메소드를 호출할 수 있다. */
        /* API란?
        * Application Programming Interface는 응용프로그램에서 사용할 수 있도록
        * 운영체제가 프로그래밍 언어가 제공하는 기능을 제어할 수 있도록 만든 인터페이스를 뜻한다.
        * 쉽게 말해 우리가 구현할 수 없거나 구현하기 번거로운 기능들을 JDK를 설치하면 사용할 수 있도록 제공해놓은
        * 소스코드(클래스나 인터페이스)들을 의미한다.
        * 쉽게 말해 누가 작성해놓은 소스코드이니 가져다 쓰는 방법을 본다는 말이다.
        * 모든 코드를 우리가 다 외울 수 없으니 API 문서를 별도로 제공해주고 있다.
        * */

        /* java.lang.Math
        * Math 클래스는 수학에서 자주 사용하는 상수들과 함수들을 미리 구현해놓은 클래스이다.
        * 모든 메소드가 static 메소드로 작성되어 있다.
        * */

        /* 1. 절댓값 출력 */
        /* 1-1. 클ㄹ래스의 full-name을 다 적어서 호출하는 경우 */
        System.out.println("-7의 절댓값 : " + (java.lang.Math.abs(-7))); //ctrl 클릭 사용한 메소드 볼 수 있

        /* 1-2. import를 해서 사용 */
        System.out.println(Math.abs(-1.25)); //import를 안했는데 잘되는 이유 java.lang에 잘 속해있기 때문 자주 사용해서~

        /* 2. 최댓값, 최솟값 출력 */
        System.out.println(Math.min(10,20));
        System.out.println(Math.max(20,30));

        System.out.println(Math.PI);

        /* 3. 난수 출력 */
        System.out.println(Math.random());
    }
}





package com.ohgiraffers.section03.math;

public class Application2 {

    public static void main(String[] args) {

        /* comment. 사용자 지정 범위의 난수를 발생시킬 수 있다. */
        /* 난수의 활용
        *  Math.random()을 이용해 발생한 난수는 0부터 1전까지의 실수 범위의 난수값을 반환한다.
        * 필요에 따라 정수 형태의 값을 원하는 범위 만큼 발생시켜야 하는 경우들이 존재한다.
        * */

        /* 원하는 범위의 난수를 구하는 공식
        * (int) (Math.random * 구하려는 난수의 갯수) + 구하려는 난수의 최솟값
        * */

        /*1. 0~9까지의 난수 발생 */
        int random1 = (int) (Math.random()*10);
        System.out.println(random1);

        /* 2. 1~10까지의 난수 발생 */
        int random2 = (int) (Math.random()*10) + 1;
        System.out.println(random2);
        /* 3. 10~15까지의 난수 발생 */
        int random3 = (int) (Math.random()*6) +10;
        System.out.println(random3);
        /* 2. -128~127까지의 난수 발생 */
        int random4 = (int) (Math.random()*256) + -128;
        System.out.println(random4);

    }
}




package com.ohgiraffers.section4.scanner;

import java.util.Scanner;

public class Application1 {

    public static void main(String[] args) {

        /* comment. java.util.Scanner를 이용한 다양한 자료형 값 입력 받기 */

        /* 1. Scanner 객체 생성 */
//        java.util.Scanner sc = new java.util.Scanner(java.lang.System.in);
//        java.util.Scanner sc = new java.util.Scanner(System.in); //생략 가능해서
        Scanner sc = new java.util.Scanner(System.in);

        /* 2. 자료형별 값 입력받기*/
        /*2-1. 문자열 입력 받기*/
        /*문자열을 입력받을 때는 nextline()입력 받은 값을 문자열로 반환해준다.*/
        /*print와 println차이는 개행*/
        System.out.print("이름을 입력하세요 : "); //사용자에게 안내 문구 주기
        String name = sc.nextLine();
        System.out.println("입력하신 이름은 " + name + "입니다.");

        /* 2-2. 정수형 값 입력받기 */
        /* nextInt() : 입력받은 값은 int형으로 반환한다. */
        System.out.print("나이를 입력하세요 : ");
        int age = sc.nextInt();
        System.out.println("입력하신 나이는 " + age + "입니다.");

        /* nextLong() : 입력받은 값을 long형으로 반환한다. */
        System.out.print("금액을 입력해주세요 : ");
        long money = sc.nextLong();
        System.out.println("입력하신 금액은" + money + "원 입니다.");

        /*2-3. 실수형 값 입력받기 */
        /* nextFloat(): 입력받을 값을 float형으로 반환한다. */
        float height = sc.nextFloat();
        System.out.println("입력하신 키는 " + height + "cm입니다.");

        /* nextDouble() :입력받은 값을 double 형으로 반환한다.*/
        System.out.print("원하는 실수를 입력하세요 : ");
        double number = sc.nextDouble();
        System.out.println("입력하신 실수는 + number + 입니다.");

        /*2-4. 논리형 값 입력받기 */
        /* nextBoolean() : 입력받은 값을 boolean형으로 반환한다. */
        System.out.print("참과 거짓 중에 한가지를 true or false로 입력해주세요 : ");
        boolean isTrue = sc.nextBoolean();
        System.out.println("입력하신 논리값은 : " + isTrue + "입니다.");

        /* 2-5. 문자형 값 입력받기 */
        sc.nextLine();// 내보내주기...?
        System.out.println("아무 문자나 입력해주세요 : ");
        char ch = sc.nextLine().charAt(5);
        System.out.println("입력하신 문자는 " + ch + "입니다.");


    }
}




package com.ohgiraffers.section4.scanner;

import java.util.Scanner;

public class Application2 {

    public static void main(String[] args) {

        /*comment. Scanner의 nextLine()과 next()에 대해 구분하여 사용할 수 있다. */
        /*nextLine() : 공백을 포함한 한 줄을 입력을 위한 개행문자 전까지 읽어서 문자열로 반환한다. (공백문자 포함)
        * next(): 공백문자나 개행문자 전까지 읽어서 문자열로 반환한다.
        * */

        Scanner sc = new Scanner(System.in);
        /* nextLine */
        System.out.println("인사말을 입력해주쇼: ");
        String greeting1 = sc.nextLine();

        System.out.println("greeting1 = " + greeting1);

        /* next 공백전까지 가지고 오는 메소드 안녕하세요 반갑습니다 에선 안녕하세요만!*/
        System.out.println("인사말을 입력해주쇼: ");
        String greeting2 = sc.next();

        System.out.println("greeting2 = " + greeting2);
    }
}





package com.ohgiraffers.section01.conditional;

import java.util.Scanner;

public class A_if {
    


    public void testSimpleIfStatement() {

        /*comment. if문 단독 사용에 대한 흐름을 이해하고 적용할 수 있다. */
    /*if(조건식){
    조건식이 true일 때 실행할 명령문;
    }

    조건식 : true or false가 나오는 연산식을 조건식이라고 한다.
    if문은 조건식의 결과값이 참이면 {}안에 있는 코드를 실행하고,
    조건식의 결과값이 거짓이면 {}안에 있는 코드를 무시하고 넘어감
    */

        /*문제 1
         * 정수 한개를 입력 받아 그 수가 짝수이면 "입력하신 숫자는 짝수입니다." 라고 출력하고,
         * 짝수가 아니면 출력하지 않는 구문을 작성해보자.
         * 단, 조건과 상관 없이 프로그램이 종료될 때 "프로그램을 종료합니다." 라고 출력되도록 한다.
         * */

        Scanner sc = new Scanner(System.in);

        System.out.println("숫자 한개를 입력하세요 : ");
        int num = sc. nextInt(); //정수형을 저장하는 메소드는 nextInt

        if(num % 2 == 0) {
            System.out.println("입력하신 숫자는 짝수입니다.");
        }

        System.out.println("프로그램을 종료합니다."); //참이든 거짓이든 상관없이 출력되는 출력문
    }

    public void testNestedIfStatement() {

        /*comment. 중첩된 if문의 흐름을 이해하고 적용할 수 있다. */
        /*문제 2.
         * 정수 한 개를 입력 받아 그 숫지가 양수인 경우에만 짝수인지 확인하여
         * 짝수이면 "입력하신 숫자는 양수이면서 짝수입니다."라고 출력하고,
         * 둘 중 하나라도 해당하지 않으면 아무 내용도 출력하지 않는 구문을 작성해보자.
         * 단, 조건과 상관없이 프로그램이 종료될 때 "프로그램을 종료합니다."라고 출력되도록 한다.
         * */


        Scanner sc = new Scanner(System.in);

        System.out.println("숫자 한개를 입력하세요 :");
        int num = sc.nextInt();

        if (num > 0) {

            if (num % 2 == 0) {
                System.out.println("입력하신 숫자는 양수이면서 짝수입니다.");
            }

        }
        System.out.println("프로그램을 종료합니다.");

    }
    }



    package com.ohgiraffers.section01.conditional;

import org.w3c.dom.ls.LSOutput;

import java.util.Scanner;

public class B_ifElse {

    public void testSimpleIfElseStatement() {

        /*comment. if-else문 단독 사용에 대한 흐름을 이해하고 적용할 수 있다. */
        /*[if-else문 표현식]
         * if(조건식) {
         *   조건식이 true일 때 실행할 명령문;
         * } else {
         *   조건식이 false일 때 실행할 명령문;
         * }
         * */

        /* 문제 3
         * 정수 한 개를 입력 받아 그 수가 홀수이면 "입력하신 숫자는 홀수입니다."라고 출력하고,
         * 홀수가 아니면 "입력하신 숫자는 짝수입니다."라고 출력하는 프로그램을 작성해보자.
         * 단, 조건과 상관없이 프로그램이 종료될 때 "프로그램을 종료합니다"라고 출력되도록 한다.
         * */

        Scanner sc = new Scanner(System.in);
        System.out.print("정수 한 개를 입력하세요 : ");
        int num = sc.nextInt(); //print랑 println무슨 차이??

        if (num % 2 != 0) {
            System.out.println("입력하신 숫자는 홀수입니다.");

        }else{
            System.out.println("입력하신 숫자는 짝수입니다.");
        }
        System.out.println("프로그램을 종료합니다.");

    }
    public void testNestedIfElseStatement() {

        /* comment. 중첩된 if-else문의 흐름을 이해하고 적용할 수 있다. */
        /* 문제 4.
         * 숫자를 하나 입력 받아 양수이면 "입력하신 숫자는 양수입니다." 출력하고,
         * 음수이면 "입력하신 숫자는 음수입니다." 출력
         * 단, 0이면 "0입니다." 라고 출력하세요
         * 조건과 상관없이 프로그램이 종료될 때 "프로그램을 종료합니다." 라고 출력되도록 한다.
         * */
        Scanner sc = new Scanner(System.in);

        System.out.print("숫자를 하나 입력하세요 : ");

        int num = sc.nextInt();

        if (num != 0) {

            if (num > 0) {

                System.out.println("입력하신 숫자는 양수입니다.");

            } else {

                System.out.println("입력하신 숫자는 음수입니다.");

            }

        } else {

            System.out.println("입력하신 숫자는 0입니다.");

        }

        System.out.println("프로그램을 종료합니다.");

    }
    }





    package com.ohgiraffers.section01.conditional;

import java.util.Scanner;

public class C_ifElseIf {


    public void testSimpleIfElseIfStatement(){

        /*  comment. if else if 문 단독 사용에 대한 흐름을 이 해하고 적용할 수 있다.*/
        /*[if-else-if 표현식]
        * if(조건식1){
        * 조건식 1이 true일 때 실행할 명령문;
        * } else if(조건식2){
        *조건식 1이 false이고 조건식 2가 true일 때 실행할 명령문;
        * } else {
        * 위의 조건 2개가 모두 거짓인 경우 실행할 명령문;
        * }
        * */
    
        /*문제 5*/
        System.out.println("산속에서 나무를 하던 나무꾼이 연못에 도끼를 빠뜨리고 말았다.");
        System.out.println("연못에서 산신령이 나타나 금도끼, 은도끼, 쇠도끼를 들고 나타났다.");
        System.out.println("나마ㅜ꾼에게 셋 중 어떤 도끼가 나무꾼의 도끼인지 물어보았다.");

        System.out.print("어느 도끼가 너의 도끼이냐? (1.금,2.은,3.쇠)");
        Scanner sc = new Scanner(System.in); //조건을 2개밖에 안줬 나머지 다 쇠로 인식하는 것(5를 입력해도 쇠도끼 상황등장)
        int answer = sc.nextInt();

        if(answer == 1)

        {
            System.out.println("이런 거짓말쟁이");
        }else if(answer ==2) {
            System.out.println("거짓말");

        }else {
            System.out.println("정직");
        }
        System.out.println("산신령사라짐");
    }
    
    public void testNestedIfElseIfStatement() {

        /* comment. 중첩된 if-else-if문의 흐름을 이해하고 적용할 수 있다. */
        /* 문제 6
         * ohgiraffers 대학의 김교수님은 학생들 시험 성적을 수기로 계산해서 학점 등급을 매기는 채점방식을 사용하고 있었다.
         * 90점 이상이면 'A', 80점 이상이면 'B', 70점 이상이면 'C', 60점 이상이면 'D',
         * 60점 미만인 경우에는 'F'를 학점 등급으로 하는 기준이다.
         * 추가로 각 등급의 중간점수 (95,85,75...)인 경우 '+'를 붙여서 등급을 세분화 하다보니 복잡하다.
         * 그래서 학생의 이름과 점수를 입력하면 자동으로 학점 등급이 계산되는 프로그램을 만들기로 했다.
         * */
        Scanner sc = new Scanner(System.in);
        System.out.println("학생의 이름을 입력하세요 : ");
        String name = sc.nextLine();
        System.out.println("학생의 점수를 입력하세요 : ");
        int point = sc.nextInt();

        String grade = "";
        if (point >= 90) {
            grade = "A";

            if (point >= 95) {
                grade += "+";
            }
        } else if (point >= 80) {
            grade = "B";

            if (point >= 85) {
                grade += "+";

            }
        }
            else if (point >= 70) {
            grade = "C";

            if (point >= 75) {
                grade += "+";
            }
        }   else if (point >= 60) {
                grade = "D";
                if (point >= 65) ;
                {
                    grade += "+";}
                }else{
                    grade = "F";
                }

                System.out.println(name + "학생의 점수는 " + point + "이고, 등급은" + grade + "입니다.");
                System.out.println("프로그램을 종료합니다.");
            }
        }





        package com.ohgiraffers.section01.conditional;

import java.util.Scanner;

public class D_switch {

    public void testSimpleSwitchStatement() {

        /*comment. switch 단독 사용에 대한 흐름을 이해하고 적용할 수 있다. */
        /*[switch 표현식]
        * switch(비교할 변수) {
        *   case 비교값 1: 비교값1과 일치하는 경우 실행할 구문;break;
        *   case 비교값 2: 비교값2과 일치하는 경우 실행할 구문;break;
        *   default : case에 모두 해당하지 않는 경우 실행할 구문; break;
        * }
        * */

        /*문제 7
        * 정수 두 개와 연산 기호 문자를 입력받아서
        * 두 숫자의 연산 결과를 출력해보는 간단한 계산기를 만들어보자.
        * */

        Scanner sc = new Scanner(System.in);
        System.out.println("첫번째 정수 입력 : ");
        int first = sc.nextInt();
        System.out.println("두번째 정수 입력 : ");
        int second = sc.nextInt();
        System.out.println("연산 기호 입력(+, -, *, /, %) : ");
        char op = sc.next().charAt(0); //0번째 인덱스 딱 하나 출력되게

        int result = 0;

        switch (op) {
            case '+' :
                result = first + second; //왜 result변수에 담은건지
                break; //빠져나갈 수 있게

            case '-' :
                result = first - second;
                break;

            case '*' :
                result = first * second;
                break;

            case '/' :
                result = first / second;
                break;

            case '%' :
                result = first % second;
                break;

                //산술 연산 외 다른 문자에 대한 처리는 생략하였음
        }

        System.out.println(first + " " + op + " " + second + " = " + result);
    }

    public void testSwitchVendingMachine(){

        /*comment. switch문을 이용해서 문자열 값 비교 및 break 테스트*/
        System.out.println("=========ohgiraffers vending machine=====");
        System.out.println(" apple banana orange melon grape ");
        System.out.println("========================");
        System.out.println("과일을 선택해주세요");

        Scanner sc = new Scanner(System.in);
        String selectedFruits = sc.nextLine();

        int price = 0;

        String order ="";

        switch (selectedFruits){
            case "apple" :
                order = "apple";
                price = 1000;
                break;

            case "banana" :
            order = "banana";
            price = 1500;
            break;

            case "orange" :
                order = "orange";
                price = 2000;
                break;

            case "melon" :
                order = "melon";
                price = 2500;
                break;

            case "grape" :
                order = "grape";
                price = 100000;
                break;
        }
        System.out.println(order + "를 선택하셨습니다.");
        System.out.println(price + "원을 투입해주세요.");
    }
}
