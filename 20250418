250428 javascript web

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .area {
            width: 100px;
            height: 100px;
            border: 1px solid lightgray;
        }
    </style>
</head>

<body>
    <h1>01.id를 이용한 요소 노드 취득</h1>
    <div id="area1" class="area">
        div영역
        <p id="area2">p영역</p>
    </div>
    <div id="area1" class="area">
        div영역
    </div>
    <script>
        //요소 노드 취득 $ 같이씀
        const $element = document.getElementById('area1'); //노드를 취득한 것을 element라는 변수에 저장
        $element.style.backgroundColor = 'skyblue';
        //해당 아이디를 가진 요소들 중 첫번째 요소만 스타일 속성이 적용된다.

        //id속성값을 그대로 취득하여 전역 변수를 이용한 접근도 가능하다.
        area2.style.backgroundColor ='blue'; //바로 아이디에 접근해서 스타일 적용도 가능

        //id값을 갖는 HTML 요소가 존재하지 않는 경우 null을 반환한다.
        const $noElement = document.getElementById('area3');
        console.log($noElement);

    </script>
</body>

</html>



<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h1>02.태그 이름을 이용한 요소 노드 취득</h1>
    <ul id="food">
        <li>김치찌개</li>
        <li>된장찌개</li>
        <li>고등어구이이</li>
    </ul>
    <ul id="drink">
        <li>커피</li>
        <li>콜라</li>
        <li>우유</li>
    </ul>
    <script>
        const $lists = document.getElementsByTagName('li');
        console.log($lists);
        console.log($lists.length);

        let changeColor = 0;
        for (let i = 0; i < $lists.length; i++) {
            $lists[i].style.backgroundColor = 'rgb(130,220,)' + changeColor + ")";
            changeColor += 50;
        }

        //HTMLCollection 객체를 배열로 변환하여 순회하며 color 프로퍼티 값을 변경한다.
        [...$lists].forEach(list => list.style.color = 'blue');
        // Array.from($lists).forEach(list=>list.style.color='blue');

        const $drink = document.getElementById('drink');
        const $listFromDrink = $drink.getElementsByTagName('li');
        console.log($listFromDrink);

        [...$listFromDrink].forEach(list => list.style.color = 'red');

        const $noElement = $drink.getElementsByTagName('a');
        console.log($noElement);
    </script>

</body>

</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>03.class를 이용한 요소 노드 취득</h1>
    <ul id ='available'>
        <li class="'drink coffee">커피</li>
        <li class="'drink coke">콜라</li>
        <li class="'drink milk">우유</li>
    </ul>
    <ul id ='unavailable'>
        <li class="'drink soju">소주</li>
        <li class="'drink beer">맥주</li>
    </ul>
    <script>
        //Document.prototype.getElementsByClassName
        //DOM 전체에서 class 값이 drink인 요소 노드를 모두 탐색하여 반환
        const $drinks = document.getElementsByClassName('drink');
        console.log($drinks);
        console.log($drinks.length);

        [...$drinks].forEach(drinks => drink.style.color='red');

        const $coffee = document.getElementsByClassName('drink coffee');
        console.log($coffee);

        //Element.prototype.getElementsByClassName
        //$available의 자식 노드들 중 class 값이 drink인 요소 노드를 모두 탐색하여 반환
        const $available = document.getElementById('available');
        const $availableDrinks = $available.getElementsByClassName('drink');
        console.log($availableDrinks);

        [...$availableDrinks].forEach(drink =>drink.style.color ='blue');

        const $noElement = $available.getElementsByClassName('soju');
        console.log($noElement);
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h1>04.css선택자를 이용한 요소 노드 취득</h1>
    <div class="area">
        <p>first</p>
    </div>
    <div class="area">
        <p>second</p>
    </div>

    <script>
        //document.prototype.querySelector
        //DOM 전체에서 class 어트리뷰트 값이 area인 첫 번째 요소 노드를 탐색하여 반환
        const $area = document.querySelector(`.area`); //class선택자를 가져오겠다
        console.log($area);

        $area.style.backgroundColor = 'gray';

        //$area의 자식 노드 중 p 태그인 첫번째 요소 노드 탐색하여 반환
        const $first = $area.querySelector('p');
        console.log($first);

        $first.style.color = 'white';

        const $noElement = document.querySelector('.noElement');
        console.log($noElement)

    </script>

    <ul id="list">
        <li class='drink'>커피</li>
        <li class='drink'>콜라</li>
        <li class='food'>김치찌개</li>
        <li class='food'>된장찌개개</li>


        <script>
            //Document.prototype.querySelectorAll
            //DOM 전체에서 ul태그의 자손 li 태그들을 모두 NodeList로 반환
            const $lists = document.querySelectorAll('ul>li');
            console.log($lists);

            [...$lists].forEach(list => list.style.backgroundColor = 'gray');

            const $foodList = document.getElementById('list').querySelectorAll('.food');
            console.log($foodList);

            [...$foodList].forEach(food=> food.style.color='white');
            
            const $noElement2 = document.querySelectorAll('.noElementList');
            console.log($noElement2);
        </script>
</body>

</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>01.자식 노드 탐색</h1>

    <h3>노드 탐색</h3>

    <h3>공백 텍스트 노드</h3>
    <pre>HTML요소 사이의 스페이스, 탭, 줄바꿈(개행)등의 공백 문자는 텍스트 노드를 생성한다.</pre>

    <h3>자식 노드 탐색</h3>
    <ol id="node">
        <li>Node.prototype.childNodes : 자식 노드(요소 노드, 텍스트 노드)를 탐색하여 NodeList에 담아 반환</li>
        <li>Node.prototype.firstchild : 첫번째 자식 노드(요소 노드, 텍스트 노드)반환</li>
        <li>Node.prototype.lastchild : 마지막 자식 노드(요소 노드, 텍스트 노드)반환</li>
</ol>
        <script>
            const $node = document.getElementById('node');

            console.log($node.childNodes);
            console.log($node.firstChild);
            console.log($node.lastChild);
    
    </script>

    <ol id ='element'>
        <li>Element.prototype.children : 자식 노드 중 요소 노드만 탐색하여 HTMLCollection에 담아 반환</li>
        <li>Element.prototype.firstElementChildren :첫번째 자식 노드 중 요소 노드 반환</li>
        <li>Element.prototype.lastElementChildren :마지막 자식 노드 중 요소 노드 반환</li>
    
    </ol>
    <script>
        const $element = document.getElementById('element');
        console.log($element.children);
        console.log($element.firstElementChild);
        console.log($element.lastElementChild);
    </script>

    <h3>자식 노드 존재 확인</h3>
    <ol id="empty">

    </ol>
    <script>
        const $empty = document.getElementById('empty');
        console.log($empty.hasChildNodes()); //텍스트 노드 포함하여 확인
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h1>02.부모 노드 탐색</h1>

    <script>
        console.log('========= HTML ========');
        console.log(document.documentElement);
        console.log('========= HEAD =========');
        console.log(document.head);
        console.log('=========BODY=========');
        console.log(document.body);
        console.log(document.head.parentNode);
        console.log(document.body.parentNode);

    </script>

    <!-- ul[id=lists]>li*3 -->
    <ul id="lists">
        <li class="'coffee">커피</li>
        <li class="coke">콜라</li>
        <li class="'milk">우유</li>
    </ul>

    <script>
        const $coke = document.querySelector('coke');
        console.log($coke.parentNode);
    </script>
</body>

</html>


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <h1>03.형제 노드 탐색</h1>
    <ol id="'node">
        <li>Node.prototype.previousSinbling : 형제 노드 중 자신의 이전 형제 노드 (요소노드, 텍스트노드)를 탐색하여 반환</li>
        <li>Node.prototype.nextSinbling : 형제 노드 중 자신의 다음 형제 노드 (요소노드, 텍스트노드)를 탐색하여 반환</li>
    </ol>
    <script>
        const $node = document.getElementById('node');
        console.log($node);
        // const $firstChild = $node.firstChild;
        const { firstChild } = $node;
        console.log(firstChild);

        const {nextSibling}=firstChild;
        console.log(nextSibling);

        const { previousSibling} = nextSibling;
        console.log(previousSibling);

    </script>

    <ol id="'element">
        <li>Elements.prototype.previousElementSibling : 형제 요소 노드 중 자신의 이전 형제 요소 노드를 탐색하여 반환</li>
        <li>Elements.prototype.nextElementSibling : 형제 요소 노드 중 자신의 다음 형제 요소 노드를 탐색하여 반환</li>
    </ol>

    <script>
        const $element = document.getElementById('element');

        const firstElementChild = $element.firstElementChild; //요소 취득한걸 변수에 담는다 $엘리먼트(요소)
        consol.log(firstElementChild);

        const nextElementSibling = firstElementChild.nextElementSibling;
        console.log(nextElementSibling);

        const previousElementSibling = nextElementSibling.previousElementSibling;
        console.log(previousElementSibling);
    </script>
</body>

</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>01.노드 정보 취득</h1>
    <pre>
        Node.prototype.nodeType : 노드 객체의 종류, 즉 노드 타입을 나타내는 상수 반환
            Node.ELEMENT_NODE : 요소 노드 타입을 나타내는 상수 1 반환
            Node.TEXT_NODE : 텍스트트 노드 타입을 나타내는 상수 3반환환
            Node.DOCUMENT_NODE : 문서 노드 타입을 나타내는 상수 9를 반환

        Node.prototype.nodeName : 노드의 이름을 문자열로 반환한다.
        요소 노드 : 태그 이름을 문자열로 반환
        텍스트 노드 : 문자열 "#text"를 반환
        문서 노드 : 문자열 "#document"를 반환
    </pre>

    <div id = "area">노드 정보 취득</div>

    <script>
        console.log(document.nodeType);
        console.log(document.nodeName);

        const $area = document.getElementById('area');
        console.log($area.nodeType);
        console.log($area.nodeName);

        const $textNode = $area.firstChild;
        console.log($textNode.nodeType);
        console.log($textNode.nodeName);

    </script>
</body>
</html>
