250701 교육일지

포켓몬 화면에 띄우는 실습

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script crossorigin src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
<style>
    	.card {
            border: 1px solid black;
            width: 300px;
            margin: 10px;
            padding: 20px;
            display: inline-block;
        }
        .card>* {
            display: inline-block;
        }
        .card>img {
            width: 100px;
            height: 100px;
        }
</style>
</head>
<body>
    <div id="root"> </div>
   
   <script type="text/babel">
    
    const {useState, useEffect} = React;

    function Title() {
        return (
            <h1>포켓몬 목록</h1>
        )
    }

    function PokemonList() {

        //전체 포켓몬 목록에 대한 api 요청
        //http://pokeapi.co/api/v2/pokemon

        const [pokemons, setPokemons] = useState([]);

        useEffect(() => {
             fetch('https://pokeapi.co/api/v2/pokemon')
                  .then(response => response.json())
                  .then(responsePokemons => setPokemons(responsePokemons.results));
        }, []
    );

    console.log(pokemons);

        return (    
            <div>
                {pokemons && pokemons.map(pokemon => <Card key={pokemon.id} pokemon={pokemon}/>)}
                </div>
        )
    }

    function Card({pokemon}) {
        
        // 한 포켓몬의 이미지 주소 요청 (이전 api 요청의 경과의 url 속성으로 존재함)
        // ex) https://pokeapi.co/api/v2/pokemon/1
        // 앞모습 이미지: sprites.front_default 속성 이미지 사용
        const [data, setData] = useState('');

        useEffect(() => {
            fetch(pokemon.url)
            .then(response => response.json())
            .then(data =>  setData(data));
        }, [])

        console.log(data);

        return (
            data &&
            <div className="card">
                <img src={data.sprites.front_default}/>
                <div className="info">
                    <h2>No. {data.id} </h2>
                    <h3>name: {pokemon.name}</h3>
                </div>
            </div>
        )
    }

    function App() {
        return(
            <>
                <Title/>
                <PokemonList/>
            </>
        )
    }
      
      ReactDOM.createRoot(document.getElementById('root')).render(<App/>);
    
    </script>
</body>
</html>
