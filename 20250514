250514 교육일지

try {
//예외가 발생할 가능성이 있는 문장을 넣는다.
} catch (Exception1 e1) {
//exception1 이 발생했을 경우, 이를 처리하기 위한 문장을 넣는다.
} catch (Exception2 e2) {
//exception2 이 발생했을 경우, 이를 처리하기 위한 문장을 넣는다.
} catch (Exception3 e3) {
//exception3이 발생했을 경우, 이를 처리하기 위한 문장을 넣는다.
} finally {
deleteTempFiles() //프로그램 설치에 사용된 임시 파일 삭제
//try-catch구문이 종료되고 무조건 실행할 문장을 넣는다.
}

List 인터페이스는 순서가 있는 데이터 집합으로 데이터의 중복 저장을 허용한다.
(vector, ArrayList, LinkedList, Stack, Queue 등이 있다.) 
Set인터페이스는 순서가 없는 데이터 집합으로 데이터의 중복을 허용하지 않는다. 
(HashSet, TreeSet등이 있다.) 
Map인터페이스는 키와 값 한 쌍으로 이루어지는 데이터 집합이다. 
Key는 Set방식으로 관리하기 때문에 데이터의 순서를 관리하지 않고 중복된 key를 허용하지 않는다. 
Value는 중복된 값을 저장할 수 있다.(HashMap, TreeMap, HashTable, Properties 등이 있다,) 
ArrayList는 가장 많이 사용되는 collection class이다. 
배열의 단점을 보완하기 위해 만들어졌으며 크기변경, 요소추가, 삭제, 정렬 기능들을 allf 메소드로 구현해서 제공하고 있다. 
ArrayList alist = new ArrayList(); 이건 내부적으로 10칸짜리를 한 번에 생성하는 것이다. 
값을 삭제할 땐 alist.remove/ 값을 수정할 땐 alist.set을 사용한다. 
Iterator는 반복자라 불리우며, 반복문을 이용해서 목록을 하나씩 꺼내는 방식으로 사용하기 위함이다. 
인덱스로 관리되는 collection이 아닌경우 반복문을 사용해 요소에 하나씩 접근할 수 없어서 
인덱스를 사용하지 않고도 반복문을 사용하기 위한 목록을 만들어주는 역할이라 보면 된다.
hasNext()는 다음 요소를 가지고 있는 경우 true, 요소가 없으면 false를 반환하고, next()는 다음 요소를 반환한다.

전부터 배웠던 내용들은 문법 구조들이 비슷하고 반복해서 타이핑하다보니 자연스럽게 작성할 수 있게 되었지만, 
여전히 새로운 내용이 나오면 어렵다고 느껴진다. 
앞으로 자바를 배우면서 기초적으로 중요한 부분이기 때문에 열심히 복습해야겠다고 느꼈다. 

수업시간에 타이핑한 내용을 복기하며 다시 똑같이 따라쓰며 이해하는게 좋을 것 같다. 
앞으로 프로젝트를 진행할 때 많이 쓰인다고 해서 확실하게 이해하고 넘어가는게 좋을 것 같다.
